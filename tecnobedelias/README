PROYECTO 2018 TECNOBEDELIAS BACKEND

-Luego de clonar el proyecto abrirlo en Eclipse y actualizar en Maven
-Crear una base en postgres que se llame testdb
-Crear el datasource con esta direccion: "jdbc:postgresql://localhost/testdb", y probarlo haciendo ping(desde eclipse)
-El maven puede pedir en el build path una carpeta test, yo la volé.
-Crear la carpeta tecnobedelias\src\main\resources\
-Crear el archivo application.properties en el directorio tecnobedelias\src\main\resources\
	el archivo debe contener la base de datos, usuario y contraseña del postgres y demás configuraciones de JPA:

	spring.datasource.validationQuery=SELECT 1
	spring.datasource.url = jdbc:postgresql://localhost/testdb
	spring.jmx.enabled=false\n
	spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
	spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
	spring.datasource.username = postgres
	spring.datasource.password = postgres
	spring.jpa.hibernate.ddl-auto=update
	spring.mail.host=smtp.gmail.com
	spring.mail.port=587
	gmail.username=proyecto.tecnobelelias@gmail.com
	gmail.password=HYFLM2018


-Correr la aplicación ejecutando el archivo TecnobedeliasApplication -> Run As -> Java Application

-Entrar denuevo al pgadmin ejecutar esta sentencia sql:

INSERT INTO public.roles (id,activa, descripcion, nombre)
VALUES (1,true, 'el que administra', 'ADMINISTRADOR'); 

-Con la aplicación corriendo entrar al Postman para crear usuarios
Post al http://localhost:8080/usuario/crear/ADMINISTRADOR
Body raw JSON(application/json)

{
	"cedula": "11111111",
	"nombre": "Juan",
	"apellido" : "Perez",
	"email" : "administrador@adinet.com.uy",
	"username" : "admin"
	"password" : "admin1234"
}


-Crear los Roles 
Post al http://localhost:8080/rol/crear
Body raw JSON(application/json)

{
	"nombre" : "ADMINISTRADOR"
}

-Asignar rol al usuario
Post al http://localhost:8080/users/rol
Body x-www-form-urlencoded
Key 			Value
rol 			ADMINISTRADOR
usuarioId		[id del usuario creado]


-Loguear
Post al http://localhost:8080/login
Body raw JSON(application/json)

{
	"username" : "admin",
	"password" : "admin1234"
}

-Abrir el Swagger en el Navegador
http://localhost:8080/swagger-ui.html

-Autorizar
Copiar el token recibido como respuesta al login en el postman(Bearer askdjfaksdjfaskdjfksadjfakslfdj...)
y pegarlo en el swagger en el campo Bearer access_token

